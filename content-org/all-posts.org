#+hugo_base_dir: ../
#+hugo_section: ./posts

#+hugo_weight: auto
#+hugo_auto_set_lastmod: t

#+author: T, Ivan

# do =C-c C-e H H= to export just this post.

* Ideas
** DONE About this site
   :PROPERTIES:
   :EXPORT_FILE_NAME: about-this-site
   :END:
*** Whats is this?
    This a blog. It is edited in emacs org. It is exported to MD by
    [[https://ox-hugo.scripter.co/][ox-hugo]], and generated into a static site with Hudo, using the
    book theme. I wanted a way to make my many and various notes in my
    org journal more centralised, and more useful in the future.  
    I like the book theme because it has a TOC. I am a fan
    of the Cornell note taking system. [[/images/cornell.webp.png]] 
    Cornell notes have a focus on revision and skim-ability. I wanted
    a blog site where I had a TOC I could use like the left hand
    "keyword" column of this note system. That is to say. cover the
    content, and use the keywords or key questions to revise what was
    written. I often find myself writing my org journal headlines in
    question format. But the answer are forgotten soon after i have
    solved that problem and moved on to the next. I think If I had a
    output for these notes, it would encourage me to keep them
    neater. If they are neat they can form a support for my
    professional accumulation of knowledge, and the ability to do the
    thing. As it stands, even though I have done many amazing things once, I'm
    not sure I could do them again any easier or quicker.
    
    All the content is kept in one file content-org/all-posts.org. It
    is exported with =C-c C-e H A=. Which triggers ox-hugo to make a
    md file for each Headding in the file. 
    [[https://ox-hugo.scripter.co/doc/image-links/][how to link images]]

    [[https://mstempl.netlify.com/post/static-website-with-emacs-and-hugo/][This guy helped]] me when I googled how to do this. 
**** What now?
     - [ ] Learn more about how to format things in org files so I can
       output a pretty well formated blog
     - [ ] Get a better idead of how to controll the menues and things of
       the book theme
     - [x] Make this integrated with netlify so i can just push
       changes to github and have it update the site. [[https://gohugo.io/hosting-and-deployment/hosting-on-netlify/#use-hugo-themes-with-netlify][This helped]]. It
       is now online at amazing-beaver-3ff5b0.netlify.com and soon
       become.radioac.dev 
     - [ ] Wait for tsl certificate to be issued.
     - [ ] make the "edit this page" link at bottom of template go to the org file.
     - [ ] add some more blog like features to the book blog pages
       - [ ] tags and things
       - [ ] next and previous etc
     - [ ] get the export on save thing working
**** Features I want.
     - [ ] Discovery
       - [ ] Other things from this tag
       - [ ] next and previous
       - [ ] category
       - [ ] Footnotes, or tool tips
       - [ ] move TOC to the left
       - [ ] Make a quiz mode.. like hide the content of the
         subheadings until clicked.
       - [ ] have a summary footer for each post.. 
	 - [ ] be able to skim browse all the post by these sumaries

** DONE Epwing dictionaries
   :PROPERTIES:
   :EXPORT_FILE_NAME: epwing-dictionaries
   :END:
*** What is EPWING?
    It seems to be a legacy format for dictionary data, that was
    / is mostly used by Japanese electronic dictionaries. I remember
    someone complaining about its great inconsistency as a format, so
    as to make importing data from it difficult. It seems that there
    needs to be custom parsers written for each different publishers
    version of the format. I came across it as a Japanese learner. 
    The browser dictionary extension [[https://foosoft.net/projects/yomichan/][yomichan]] can import some of these
    to provide J:J [fn:: Japanese word with Japanese definition] look
    ups. The  J:J dictionaries I find most useful are the ones
    targeted at people of my reading level (kids). These are not
    available as EPWING. 
*** Why do I care?
    Because yomichan sometimes doesn't give you the defintion of
    longer phrases, and I wanted to find a dictionary that might have
    contained longer connected keywords, so I could make flashcards
    directly of those, instead of their component parts.
*** Why this post?  
    to remember that there is a big collection of them [[https://onedrive.live.com/?id=AC31052BF2B8CA11%211937&cid=AC31052BF2B8CA11][here]].


* Emacs                                                              :@emacs:
All posts in here will have the category set to /emacs/.
** TODO Writing Hugo blog in org                                   :hugo:org:
:PROPERTIES:
:EXPORT_FILE_NAME: writing-hugo-blog-in-org-subtree-export
:EXPORT_DATE: 2017-09-10
:EXPORT_HUGO_MENU: :menu "main"
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :foo bar :baz zoo :alpha 1 :beta "two words" :gamma 10
:END:
*** First heading within the post
- This post will be exported as  a s
  =content/posts/writing-hugo-blog-in-org-subtree-export.md=.
- Its title will be "Writing Hugo blog in Org".
- It will have /hugo/ and /org/ tags and /emacs/ as category.
- The menu item /weight/ and post /weight/ are auto-calculated.
- The menu item /identifier/ is auto-set.
- The /lastmod/ property in the front-matter is set automatically to
  the time of export.
**** A sub-heading under that heading
- It's draft state will be marked as =true= as the subtree has a the
  todo state set to /TODO/.

With the point _anywhere_ in this /Writing Hugo blog in Org/ post
subtree, do =C-c C-e H H= to export just this post.

The exported Markdown has a little comment footer as set in the /Local
Variables/ section below.
* Footnotes
* COMMENT Local Variables                                           :ARCHIVE:
# Local Variables:
# org-hugo-footer: "\n\n[//]: # \"Exported with love from a post written in Org mode\"\n[//]: # \"- https://github.com/kaushalmodi/ox-hugo\""
# End:
