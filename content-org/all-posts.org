#+hugo_base_dir: ../
#+hugo_section: ./posts

#+hugo_weight: auto
#+hugo_auto_set_lastmod: t

#+author: T, Ivan

# do =C-c C-e H H= to export just this post.

* Ideas
** DONE About this site
   :PROPERTIES:
   :EXPORT_FILE_NAME: about-this-site
   :END:
*** Whats is this?
    This a blog. It is edited in emacs org. It is exported to MD by
    [[https://ox-hugo.scripter.co/][ox-hugo]], and generated into a static site with Hudo, using the
    book theme. I wanted a way to make my many and various notes in my
    org journal more centralised, and more useful in the future.  
    I like the book theme because it has a TOC. I am a fan
    of the Cornell note taking system. [[/images/cornell.webp.png]] 
    Cornell notes have a focus on revision and skim-ability. I wanted
    a blog site where I had a TOC I could use like the left hand
    "keyword" column of this note system. That is to say. cover the
    content, and use the keywords or key questions to revise what was
    written. I often find myself writing my org journal headlines in
    question format. But the answer are forgotten soon after i have
    solved that problem and moved on to the next. I think If I had a
    output for these notes, it would encourage me to keep them
    neater. If they are neat they can form a support for my
    professional accumulation of knowledge, and the ability to do the
    thing. As it stands, even though I have done many amazing things once, I'm
    not sure I could do them again any easier or quicker.
    
    All the content is kept in one file content-org/all-posts.org. It
    is exported with =C-c C-e H A=. Which triggers ox-Hugo to make a
    md file for each Headding in the file. 
    [[https://ox-hugo.scripter.co/doc/image-links/][how to link images]]

    [[https://mstempl.netlify.com/post/static-website-with-emacs-and-hugo/][This guy helped]] me when I googled how to do this. 
**** What now?
     - [ ] Learn more about how to format things in org files so I can
       output a pretty well formated blog
     - [ ] Get a better idead of how to controll the menues and things of
       the book theme
     - [x] Make this integrated with netlify so i can just push
       changes to github and have it update the site. [[https://gohugo.io/hosting-and-deployment/hosting-on-netlify/#use-hugo-themes-with-netlify][This helped]]. It
       is now online at amazing-beaver-3ff5b0.netlify.com and soon
       become.radioac.dev 
     - [ ] Wait for tsl certificate to be issued.
     - [ ] make the "edit this page" link at bottom of template go to the org file.
     - [ ] add some more blog like features to the book blog pages
       - [ ] tags and things
       - [ ] next and previous etc
     - [ ] get the export on save thing working
**** Features I want.
     - [ ] Discovery
       - [ ] Other things from this tag
       - [ ] next and previous
       - [ ] category
       - [ ] Footnotes, or tool tips
       - [ ] move TOC to the left
       - [ ] Make a quiz mode.. like hide the content of the
         subheadings until clicked.
       - [ ] have a summary footer for each post.. 
	 - [ ] be able to skim browse all the post by these sumaries

** DONE Epwing dictionaries
   :PROPERTIES:
   :EXPORT_FILE_NAME: epwing-dictionaries
   :END:
*** What is EPWING?
    It seems to be a legacy format for dictionary data, that was
    / is mostly used by Japanese electronic dictionaries. I remember
    someone complaining about its great inconsistency as a format, so
    as to make importing data from it difficult. It seems that there
    needs to be custom parsers written for each different publishers
    version of the format. I came across it as a Japanese learner. 
    The browser dictionary extension [[https://foosoft.net/projects/yomichan/][yomichan]] can import some of these
    to provide J:J [fn:: Japanese word with Japanese definition] look
    ups. The  J:J dictionaries I find most useful are the ones
    targeted at people of my reading level (kids). These are not
    available as EPWING. 
*** Why do I care?
    Because yomichan sometimes doesn't give you the defintion of
    longer phrases, and I wanted to find a dictionary that might have
    contained longer connected keywords, so I could make flashcards
    directly of those, instead of their component parts.
*** Why this post?  
    to remember that there is a big collection of them [[https://onedrive.live.com/?id=AC31052BF2B8CA11%211937&cid=AC31052BF2B8CA11][here]].
** DONE Links 2019 November 21
   :PROPERTIES:
   :EXPORT_FILE_NAME: 20191121-links
   :END:
*** How do I get the DS_store file out of my git repo?
    [[https://web.archive.org/web/20190521183336/http://www.codeblocq.com/2016/01/Untrack-files-already-added-to-git-repository-based-on-gitignore/][Untrack-files-already-added-to-git-repository-based-on-gitignore]]

*** Where can I get example gitignore strings for osx?
    https://github.com/github/gitignore
*** What is the a Finish gum I want to try.
    I was wondering if there was any endocrine disrupters in chewing
    gum. And that lead me to read some research papers about gum. The
    one i was reading was linking chewing flavorful gum to a reduction
    in saliva stress hormone indicators [fn::salivary cortisol level -
    - https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5381771/ ] and in
      that it also mentioned that chewing speed has been shown to be a
      indicator of stress, so they had the participants chew at 70
      chews per minute to a metronone.. I wonder if you can look at
      people and make any assessment of their stress level by their
      chewing speed.. Anyway this article mentioned an unpalatable
      gum, Fazer Salmiakki. Which I of course wanted to know why
      anyone would make unpalatable gum. But it's just that salty
      licorice flavor. 

    https://candyhero.com/fazer-salmiakki-chewing-gum
*** How do I Add footnotes to org?[fn::https://web.archive.org/web/20190924112658/https://orgmode.org/manual/Footnotes.html]
** TODO I want to try a Kubernetes cluster on Pi
   :PROPERTIES:
   :EXPORT_FILE_NAME: i-want-to-try-a-kubernetes-cluster-on-pi
   :END:
*** Link
    https://itnext.io/building-a-kubernetes-cluster-on-raspberry-pi-and-low-end-equipment-part-1-a768359fbba3
    https://github.com/lucasteligioridis/raspbernetes
    https://itnext.io/headless-kubernetes-on-15-raspberry-pis-boot-in-under-8-minutes-808402ea2348
** DONE How do I migrate a postgess database running in a docker container to one running on RDS?
   :PROPERTIES:
   :EXPORT_FILE_NAME: how-do-i-migrate-a-postgess-database-running-in-a-docker-container-to-one-running-on-rds
   :END:
*** How do I set up a PG DB on RDS.
    first what do I need? well in this case this is a POC[fn::proof of
    concept] project, not a real build. So I don't need to think too
    much about provisioning anything with sensible amounts of
    resource. I will make the assumption that there is some resource
    configuration that will match our apps needs, but I don't want to
    figure that out for now. I want to just make some thing quick and
    cheap. why not a t3.micro with none of the features enabled..
    So I guess I need a PG instance of the same version as our docker
    db.
**** Links
     - https://dev.to/jamby1100/deploy-rails-in-amazon-ecs-part-3-create-the-rds-database-task-definition-and-load-balancer-1ffe
*** How do i migrate data from docker to RDS
    Transition to AWS RDS:
    - Login to your machine.
      - Stop the application docker- docker stop <application_docker_name>
      - Check the website - should be down
    - Login to postgres container- docker exec -it <postgres_docker_name> bash
      - Take a dump of your database:
	- pg_dump -Fc -v -h localhost -U <username> -d <db_name> -p 5432 > dump_file.dump
      - Copy the database to AWS RDS:While youâ€™re in your postgres container:
	- pg_restore -c -h <aws_rds_link> -U <username> -d <db_name> -v dump_file.dump
    - Login to AWS RDS, validate the last entries in some tables.
    - Deploy the new code (with the new AWS RDS url)
    - Check your website - should be up and running
    - Validate some db updates
    - Stop the postgres container and remove it.
    - Most important step, first try it in your dev environment or staging before moving to productionAH

**** Links
     - https://medium.com/@aditya_misra5/move-your-local-postgres-db-container-to-rds-in-12-simple-steps-84f9fd450c9e


*** What might the change path look like for production?
    1) Clone  production all up to speed with the current build on the
       docker container. and make sure it's okay.
    2) make an outage period where we take a dump of the docker-db and load
       it to RDS-db
    3) update production to use RDS endpoints for db. start it up and
       test it out.
       - point it back at the docker instance if its not working.
    4) Bonus points ..
       - clone prod to a staging environment .. and do it
	 once there first
       - How can you make sure users dont lose data if they input it
         into the new system and something goes wrong?
** DONE How do I troubleshoot RDS connectivity?
   :PROPERTIES:
   :EXPORT_FILE_NAME: how-do-i-troubleshoot-rds-connectivity
   :END:

*** How do I check access to RDS from my EC2 instance.
    The endpoint address and port of an RDS database can be found from
    the RDS console on the "Connectivity & security" page. 
    To test Connectivity from a host to the DB here are some steps to
    follow:
    1) confirm the endpoint dns resolves to the IP of the DB
       - `nslookup <endpoint>`
    2) confirm network connectivity from host to the DB
       - nc <endpoint> <port>
    3) Try to connect with a database client. 
       - psql -h <endpoint>

*** Well that didn't work. What should I check?
  1) Is there something else I should be doing?
  2) Is everything turned on?
     - For example is the RDS instance in a running state or stopped?
  3) Are there typos anywhere?
  4) Am I using the right tool for the job?
  5) Is everything configured like you thought?
     - IS the RDS instance in the subnet group you expected?
     - Do you know how things are configured?
  6) is the configuration correct generally speaking?
     - Do the subnet ACLS and SG allow for traffic between the the Let's check. I'm sure its an ACL or SG problem. 
     - Are RDS Subnet groups correct?

 also [[https://aws.amazon.com/premiumsupport/knowledge-center/rds-cannot-connect/][here is the aws support docs]]. It adds 
 - Check DNS resolution with nslook up. `nslookup rds.endpoint`
   (usually I would ping the resolved IP to check network
   connectivity. .but I have a feeling RDS hosts have ping responders
   turned off.)
 - Then check with telnet or nc
 - As for troubleshooting the network the docs say
   - check your VPC SGs allow access from client. 
   - (probably also need to check the clients SG and ACLs allow access
     out as well)
   - 
**** Extra Commands 
    - install postgress on AmznLinux: `sudo amazon-linux-extras install postgresql10` 
**** Links
    - [[https://www.digitalocean.com/community/tutorials/how-to-use-netcat-to-establish-and-test-tcp-and-udp-connections-on-a-vps][Digital ocean blog]]

*** Whats is an RDS subnet group? 
 I made an RDS database, and then had problems connecting to it. It
 turns out it had provisioned with an IP from another old projects
 subnet, and that subnet's ACL didn't allow access. Why did my DB use
 an interface in this seemingly random subnet? Maybe it was because of
 the [[https://docs.rightscale.com/cm/dashboard/clouds/aws/rds_subnet_groups.html][RDS Subnet group]] configuration for this VPC. I had never heared of
 this before so lets take a look.

 #+BEGIN_QUOTE
 An RDS Subnet Group is a collection of subnets that you can use to designate for your RDS database instance in a VPC. The database within your VPC will use the Subnet Group and the preferred Availability Zone to select a subnet and an IP address within that subnet. An Elastic Network Interface will be associated to the database instance with that IP address. Note that each DB Subnet Group should have at least one subnet for every Availability Zone in a given Region.
 #+END_QUOTE
  [fn::RightScale Docs - https://docs.rightscale.com/cm/dashboard/clouds/aws/rds_subnet_groups.html]
 
**** Theory: I need to add my sedired subnet to the group, or make a new group

*** Conclusion
    When I provisioned our general systems VPC and subnets, I did not
    account for the need of a second subnet in another AZ, for the use
    of RDS. I need to go back to the team and talk about make a new
    subnet.
** DONE Troubleshooting together
   :PROPERTIES:
   :EXPORT_FILE_NAME: troubleshooting-together
   :END:

*** Making Changes 
    Aside from the general best practice of making changes in a
    shared change controled environment (like not doing so without
    prio planning and communication) When troublesshooting in an
    environment that no-one is using for anything important currently,
    it's important that you can put everything back how you found
    it at the end. This helps prevent configuration drift, and breaking things
    for the next guy. 
    When troubleshooting, you should keep a detailed and time ordered
    list of the changes to configuration. So you always know what you
    changed, and how to reverse it back when your done.
    
* Emacs                                                              :@emacs:
All posts in here will have the category set to /emacs/.
** TODO Writing Hugo blog in org                                   :hugo:org:
:PROPERTIES:
:EXPORT_FILE_NAME: writing-hugo-blog-in-org-subtree-export
:EXPORT_DATE: 2017-09-10
:EXPORT_HUGO_MENU: :menu "main"
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :foo bar :baz zoo :alpha 1 :beta "two words" :gamma 10
:END:
*** First heading within the post
- This post will be exported as  a s
  =content/posts/writing-hugo-blog-in-org-subtree-export.md=.
- Its title will be "Writing Hugo blog in Org".
- It will have /hugo/ and /org/ tags and /emacs/ as category.
- The menu item /weight/ and post /weight/ are auto-calculated.
- The menu item /identifier/ is auto-set.
- The /lastmod/ property in the front-matter is set automatically to
  the time of export.
**** A sub-heading under that heading
- It's draft state will be marked as =true= as the subtree has a the
  todo state set to /TODO/.

With the point _anywhere_ in this /Writing Hugo blog in Org/ post
subtree, do =C-c C-e H H= to export just this post.

The exported Markdown has a little comment footer as set in the /Local
Variables/ section below.
* Footnotes
* COMMENT Local Variables                                           :ARCHIVE:
# Local Variables:
# org-hugo-footer: "\n\n[//]: # \"Exported with love from a post written in Org mode\"\n[//]: # \"- https://github.com/kaushalmodi/ox-hugo\""
# End:
